{"version":3,"sources":["redux/actions/sample-module/index.js","redux/actions/sample-module/types.js","redux/reducers/sample-module/index.js","redux/reducers/sample-module/model.js","redux/actions/ui/index.js","redux/actions/ui/types.js","redux/reducers/ui/index.js","redux/reducers/ui/model.js","redux/reducers/index.js","redux/actions/error/index.js","redux/actions/error/types.js","redux/actions/api/helpers.js","redux/actions/api/epics.js","redux/actions/api/types.js","redux/actions/index.js","helpers/index.js","redux/middleware/multi-dispatch/index.js","redux/actions/api/index.js","redux/middleware/sample-module/index.js","redux/middleware/error/index.js","redux/store.js","containers/sample-module/helpers/staticProps.js","containers/sample-module/View.jsx","containers/sample-module/index.js","index.js"],"names":["getSampleModuleEpic","createAction","getSampleModuleSuccess","getSampleModuleCancel","getSampleModule","clearData","handleActions","_handleActions","Object","defineProperty","ACTION","state","action","console","log","payload","objectSpread","sampleModuleList","candidatesCenterList","pageSize","pageCurrent","candidateStatus","auctionIdsAssignedToMe","candidateNamesByClient","keyword","showSpinner","hideSpinner","ui_handleActions","isLoading","combineReducers","ui","sampleModule","onErrorApi","retryStrategy","errors","scan","_","value","index","delay","headersJson","Content-Type","epics","action$","ofType","mergeMap","_action$payload","url","onSuccess","onCancel","body","inlineQuery","concat","qs","stringify","ajax","get","retryWhen","result","response","catch","err","startWith","takeUntil","_action$payload2","patch","_action$payload3","post","_action$payload4","_action$payload5","delete","rootEpic","store","combineEpics","apply","toConsumableArray","API","error","stream","domain","posts","comments","multi","_ref","dispatch","next","Array","isArray","filter","Boolean","map","getAjaxRequestEpic","middleware_sample_module","type","_ref2","_ref3","composeEnhancers","compose","stateFromLocalStorage","serializedState","sessionStorage","getItem","JSON","parse","loadState","epicMiddleware","createEpicMiddleware","combinedEpics","createStore","combinedReducers","applyMiddleware","multiDispatch","contextTypes","router","PropTypes","shape","history","object","isRequired","SampleModule","array","bool","init","getSampleModuleData","_this","props","reduxAction","getSampleModuleDataCancel","message","warning","this","_this$props","react_default","a","createElement","className","button_default","onClick","icon_default","spin_default","list_default","size","bordered","dataSource","renderItem","item","Item","title","Component","defaultProps","connect","bindActionCreators","actions","View","data","rootElement","document","getElementById","ReactDOM","render","es","theme","containers_sample_module"],"mappings":"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","file":"static/js/main.42576fd9.chunk.js","sourcesContent":["import { createAction } from \"redux-actions\";\nimport * as TYPE from \"./types\";\n\nexport const getSampleModuleEpic = createAction(TYPE.GET_SAMPLE_MODULE_EPIC);\nexport const getSampleModuleSuccess = createAction(\n  TYPE.GET_SAMPLE_MODULE_SUCCESS\n);\nexport const getSampleModuleCancel = createAction(\n  TYPE.GET_SAMPLE_MODULE_CANCEL\n);\nexport const getSampleModule = createAction(TYPE.GET_SAMPLE_MODULE);\n\nexport const clearData = createAction(TYPE.CLEAR_DATA);\n","export const GET_SAMPLE_MODULE_EPIC = \"[sample_module_name] Get Epic\"; // to middleware\nexport const GET_SAMPLE_MODULE_SUCCESS = \"[sample_module_name] Get Success\";\nexport const GET_SAMPLE_MODULE_CANCEL = \"[sample_module_name] Get Cancel\";\nexport const GET_SAMPLE_MODULE = \"[sample_module_name] Get\";\n\nexport const CLEAR_DATA = \"[sample_module_name] Clear Data\";\n","import { handleActions } from \"redux-actions\";\nimport * as ACTION from \"../../actions/sample-module\";\nimport model from \"./model\";\n\nexport default handleActions(\n  {\n    [ACTION.getSampleModule]: (state, action) => {\n      console.log(\"action.payload\", action.payload);\n      return {\n        ...state,\n        sampleModuleList: action.payload\n      };\n    },\n    [ACTION.clearData]: (state, action) => ({\n      ...state,\n      sampleModuleList: []\n    })\n  },\n  model\n);\n","export default {\n  candidatesCenterList: {\n    pageSize: 10,\n    pageCurrent: 0\n  },\n  candidateStatus: [],\n  auctionIdsAssignedToMe: [],\n  candidateNamesByClient: [],\n  keyword: \"\"\n};\n","import { createAction } from \"redux-actions\";\nimport * as TYPE from \"./types\";\n\nexport const showSpinner = createAction(TYPE.SHOW_SPINNER);\nexport const hideSpinner = createAction(TYPE.HIDE_SPINNER);\n","export const SHOW_SPINNER = \"[ui] Show spinner\";\nexport const HIDE_SPINNER = \"[ui] Hide spinner\";\n","import { handleActions } from \"redux-actions\";\nimport * as ACTION from \"../../actions/ui\";\nimport model from \"./model\";\n\nexport default handleActions(\n  {\n    [ACTION.showSpinner]: state => {\n      console.log(\"show spinner count\");\n      return {\n        ...state,\n        isLoading: true\n      };\n    },\n    [ACTION.hideSpinner]: state => {\n      console.log(\"hide spinner count\");\n      return {\n        ...state,\n        isLoading: false\n      };\n    }\n  },\n  model\n);\n","export default {\n  isLoading: false\n};\n","import { combineReducers } from \"redux\";\nimport sampleModule from \"./sample-module\";\nimport ui from \"./ui\";\n\nexport default combineReducers({\n  ui,\n  sampleModule\n});\n","import { createAction } from \"redux-actions\";\nimport * as TYPE from \"./types\";\n\nexport const onErrorApi = createAction(TYPE.ON_ERROR_API);\n","export const ON_ERROR_API = \"[error] api\";\n","export const retryStrategy = errors =>\n  errors\n    .scan((_, value, index) => {\n      if (index < 2) {\n        return index;\n      }\n      throw value;\n    })\n    .delay(5000);\n\nexport const headersJson = {\n  \"Content-Type\": \"application/json\"\n  // Authorization: `Bearer ${TOKEN}`,\n};\n","import qs from 'query-string';\nimport { ajax } from 'rxjs/observable/dom/ajax';\nimport * as TYPE from './types';\nimport { showSpinner, hideSpinner } from '../ui';\nimport { onErrorApi } from '../error';\nimport { retryStrategy, headersJson } from './helpers';\nimport 'rxjs';\n\nexport const getAjaxRequestEpic = action$ =>\n  action$.ofType(TYPE.GET_AJAX_REQUEST_EPIC).mergeMap(action => {\n    const { url, onSuccess, onCancel, body } = action.payload;\n    const inlineQuery = body === null ? '' : `?${qs.stringify(body)}`;\n    return ajax\n      .get(`${url}${inlineQuery}`, headersJson)\n      .retryWhen(retryStrategy)\n      .mergeMap(result => [onSuccess(result.response)])\n      .catch(err => [onErrorApi(err), hideSpinner()])\n      .startWith(showSpinner())\n      .takeUntil(action$.ofType(onCancel));\n  });\n\nexport const patchAjaxRequestEpic = action$ =>\n  action$.ofType(TYPE.PATCH_AJAX_REQUEST_EPIC).mergeMap(action => {\n    const { url, onSuccess, onCancel, body } = action.payload;\n    return ajax\n      .patch(url, body, headersJson)\n      .retryWhen(retryStrategy)\n      .mergeMap(result => [onSuccess(result.response)])\n      .catch(err => [onErrorApi(err), hideSpinner()])\n      .startWith(showSpinner())\n      .takeUntil(action$.ofType(onCancel));\n  });\n\nexport const postAjaxRequestEpic = action$ =>\n  action$.ofType(TYPE.POST_AJAX_REQUEST_EPIC).mergeMap(action => {\n    const { url, onSuccess, onCancel, body } = action.payload;\n    return ajax\n      .post(url, body, headersJson)\n      .retryWhen(retryStrategy)\n      .mergeMap(result => [onSuccess(result.response)])\n      .catch(err => [onErrorApi(err), hideSpinner()])\n      .startWith(showSpinner())\n      .takeUntil(action$.ofType(onCancel));\n  });\n\nexport const putAjaxRequestEpic = action$ =>\n  action$.ofType(TYPE.PUT_AJAX_REQUEST_EPIC).mergeMap(action => {\n    const { url, onSuccess, onCancel, body } = action.payload;\n    return ajax\n      .post(url, body, headersJson)\n      .retryWhen(retryStrategy)\n      .mergeMap(result => [onSuccess(result.response)])\n      .catch(err => [onErrorApi(err), hideSpinner()])\n      .startWith(showSpinner())\n      .takeUntil(action$.ofType(onCancel));\n  });\nexport const deleteAjaxRequestEpic = action$ =>\n  action$.ofType(TYPE.PUT_AJAX_REQUEST_EPIC).mergeMap(action => {\n    const { url, onSuccess, onCancel, body } = action.payload;\n    return ajax\n      .delete(`${url}?${qs.stringify(body)}`, headersJson)\n      .retryWhen(retryStrategy)\n      .mergeMap(result => [onSuccess(result.response)])\n      .catch(err => [onErrorApi(err), hideSpinner()])\n      .startWith(showSpinner())\n      .takeUntil(action$.ofType(onCancel));\n  });\n\nexport default [\n  getAjaxRequestEpic,\n  patchAjaxRequestEpic,\n  postAjaxRequestEpic,\n  putAjaxRequestEpic,\n  deleteAjaxRequestEpic\n];\n","export const GET_AJAX_REQUEST_EPIC = \"[app] API Get Ajax Request\";\nexport const PATCH_AJAX_REQUEST_EPIC = \"[app] API Patch Ajax Request\";\nexport const POST_AJAX_REQUEST_EPIC = \"[app] API Post Ajax Request\";\nexport const PUT_AJAX_REQUEST_EPIC = \"[app] API Put Ajax Request\";\nexport const DELETE_AJAX_REQUEST_EPIC = \"[app] API Delete Ajax Request\";\n","import { combineEpics } from \"redux-observable\";\n\nimport API from \"./api/epics\";\n\nconst rootEpic = (action$, store) =>\n  combineEpics(...API)(action$, store).catch((error, stream) => {\n    console.error(error);\n    return stream;\n  });\n\nexport default rootEpic;\n","export const loadState = () => {\n  try {\n    const serializedState = sessionStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst domain = \"https://jsonplaceholder.typicode.com\";\n\nexport const url = {\n  posts: `${domain}/posts`,\n  comments: `${domain}/comments`\n};\n","const multi = ({ dispatch }) => next => action => {\n  if (Array.isArray(action)) {\n    return action.filter(Boolean).map(dispatch);\n  }\n  return next(action);\n};\n\nexport default multi;\n","import { createAction } from \"redux-actions\";\nimport * as TYPE from \"./types\";\n\nexport const getAjaxRequestEpic = createAction(TYPE.GET_AJAX_REQUEST_EPIC);\n","import { getAjaxRequestEpic } from \"../../actions/api\";\nimport {\n  getSampleModule,\n  getSampleModuleSuccess\n} from \"../../actions/sample-module\";\n\nimport * as TYPE from \"../../actions/sample-module/types\";\nimport { url } from \"../../../helpers\";\nimport { showSpinner, hideSpinner } from \"../../actions/ui\";\n\nconst getSampleModuleFlow = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type === TYPE.GET_SAMPLE_MODULE_EPIC) {\n    dispatch([\n      showSpinner(),\n      getAjaxRequestEpic({\n        url: url.posts,\n        body: null,\n        onCancel: TYPE.GET_SAMPLE_MODULE_CANCEL,\n        onSuccess: getSampleModuleSuccess\n      })\n    ]);\n  }\n};\n\nconst getSampleModuleSuccessFlow = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type === TYPE.GET_SAMPLE_MODULE_SUCCESS) {\n    dispatch([getSampleModule(action.payload), hideSpinner()]);\n  }\n};\n\nconst getSampleModuleSuccessCancelFlow = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type === TYPE.GET_SAMPLE_MODULE_CANCEL) {\n    dispatch(hideSpinner());\n  }\n};\n\nexport default [\n  getSampleModuleFlow,\n  getSampleModuleSuccessFlow,\n  getSampleModuleSuccessCancelFlow\n];\n","import * as TYPE from \"../../actions/error/types\";\n\nconst onErrorApi = ({ dispatch }) => next => action => {\n  next(action);\n\n  if (action.type === TYPE.ON_ERROR_API) {\n    console.error(\"error\", action.payload, dispatch);\n  }\n};\n\nexport default [onErrorApi];\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport combinedReducers from \"./reducers\";\nimport combinedEpics from \"./actions\";\nimport { loadState } from \"../helpers\";\nimport multiDispatch from \"./middleware/multi-dispatch\";\nimport sampleModule from \"./middleware/sample-module\";\nimport error from \"./middleware/error\";\n\nconst composeEnhancers =\n  process.env.NODE_ENV === \"development\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    : null || compose;\n\nconst stateFromLocalStorage = loadState();\n\nconst epicMiddleware = createEpicMiddleware(combinedEpics);\n\nconst store = createStore(\n  combinedReducers,\n  stateFromLocalStorage,\n  composeEnhancers(\n    applyMiddleware(epicMiddleware, multiDispatch, ...sampleModule, ...error)\n  )\n);\n\nexport default store;\n","import PropTypes from \"prop-types\";\n\nexport const contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.object.isRequired\n  })\n};\n\nexport const propTypes = {\n  reduxAction: PropTypes.object.isRequired,\n  sampleModuleList: PropTypes.array,\n  isLoading: PropTypes.bool\n};\n\nexport const defaultProps = {\n  sampleModuleList: [],\n  isLoading: []\n};\n","import React, { Component } from \"react\";\nimport Button from \"antd/lib/button\";\nimport List from \"antd/lib/list\";\nimport Spin from \"antd/lib/spin\";\nimport Icon from \"antd/lib/icon\";\nimport message from \"antd/lib/message\";\nimport { defaultProps, propTypes, contextTypes } from \"./helpers\";\n\nclass SampleModule extends Component {\n  componentDidMount() {\n    this.init();\n  }\n\n  componentWillUnmount() {\n    this.props.reduxAction.getSampleModuleCancel();\n  }\n\n  init = () => {\n    console.log(\"Component Mounted\");\n  };\n\n  getSampleModuleData = () => {\n    this.props.reduxAction.getSampleModuleEpic();\n  };\n\n  getSampleModuleDataCancel = () => {\n    message.warning(\"request has been cancelled\");\n    this.props.reduxAction.getSampleModuleCancel();\n  };\n\n  clearData = () => {\n    this.props.reduxAction.clearData();\n  };\n\n  render() {\n    const { sampleModuleList, isLoading } = this.props;\n    console.log(sampleModuleList, isLoading);\n    return (\n      <main className=\"sample-module-section\">\n        <h4>Sample Module</h4>\n        <Button className=\"btn\" onClick={this.clearData}>\n          <Icon type=\"close-circle\" />\n          Clear Data\n        </Button>\n        <Button className=\"btn\" onClick={this.getSampleModuleData}>\n          Get\n        </Button>\n        <Button className=\"btn\" onClick={this.getSampleModuleDataCancel}>\n          Cancel Now\n        </Button>\n        {isLoading ? (\n          <div className=\"spin-container\">\n            <Spin />\n          </div>\n        ) : (\n          <List\n            className=\"data-list\"\n            size=\"small\"\n            bordered\n            dataSource={sampleModuleList}\n            renderItem={item => <List.Item>{item.title}</List.Item>}\n          />\n        )}\n      </main>\n    );\n  }\n}\n\nSampleModule.propTypes = propTypes;\nSampleModule.defaultProps = defaultProps;\nSampleModule.contextTypes = contextTypes;\n\nexport default SampleModule;\n","import { bindActionCreators } from \"redux\";\nimport { connect } from \"react-redux\";\nimport View from \"./View\";\nimport * as actions from \"../../redux/actions/sample-module\";\n\nfunction mapStateToProps(state) {\n  return {\n    isLoading: state.ui.isLoading,\n    sampleModuleList: state.sampleModule.sampleModuleList\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    reduxAction: bindActionCreators({ ...actions }, dispatch),\n    dispatch\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(View);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport List from \"antd/lib/list\";\nimport Icon from \"antd/lib/icon\";\nimport store from \"./redux/store\";\nimport SampleModule from \"./containers/sample-module\";\n\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\n\nconst data = [\"Scalable\", \"Reusable\", \"Maintainable\", \"Multiple dispatch\"];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Advanced Redux Pattern</h1>\n      <p>\n        Using redux, redux-observables, rxjs, react-actions, middleware,\n        ant-design\n      </p>\n      <List\n        size=\"small\"\n        bordered\n        dataSource={data}\n        renderItem={item => (\n          <List.Item>\n            <Icon className=\"icon\" type=\"check-circle\" theme=\"outlined\" />\n            {item}\n          </List.Item>\n        )}\n      />\n      <div className=\"button-list\">\n        <SampleModule />\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n"],"sourceRoot":""}